
package UI;
import DAO.DictionaryDAO;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import model.Word;

public class UITuDien extends javax.swing.JFrame {

    private DictionaryDAO dictionaryDAO = new DictionaryDAO();  // Khởi tạo DAO
    public UITuDien() {
        initComponents();
        loadTableData();  // Tải dữ liệu từ cơ sở dữ liệu vào bảng khi mở giao diện
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TuDien = new javax.swing.JTable();
        Them = new javax.swing.JButton();
        Sua = new javax.swing.JButton();
        Xoa = new javax.swing.JButton();
        Luu = new javax.swing.JButton();
        QuayLai = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TuDien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Từ", "Phát Âm", "Loại Từ", "Nghĩa"
            }
        ));
        jScrollPane1.setViewportView(TuDien);

        Them.setText("Thêm");
        Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemActionPerformed(evt);
            }
        });

        Sua.setText("Sửa");
        Sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuaActionPerformed(evt);
            }
        });

        Xoa.setText("Xóa");
        Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XoaActionPerformed(evt);
            }
        });

        Luu.setText("Lưu");
        Luu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LuuActionPerformed(evt);
            }
        });

        QuayLai.setText("Quay Lại");
        QuayLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuayLaiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(Them)
                .addGap(18, 18, 18)
                .addComponent(Sua)
                .addGap(18, 18, 18)
                .addComponent(Xoa)
                .addGap(18, 18, 18)
                .addComponent(Luu)
                .addGap(18, 18, 18)
                .addComponent(QuayLai)
                .addContainerGap(164, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Them)
                    .addComponent(Sua)
                    .addComponent(Xoa)
                    .addComponent(Luu)
                    .addComponent(QuayLai))
                .addGap(0, 25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemActionPerformed
        // Thêm từ mới vào từ điển
        String word = JOptionPane.showInputDialog("Nhập từ mới:");
        String pronunciation = JOptionPane.showInputDialog("Nhập phát âm:");
        String wordType = JOptionPane.showInputDialog("Nhập loại từ:");
        String meaning = JOptionPane.showInputDialog("Nhập nghĩa:");

        Word newWord = new Word(word, pronunciation, wordType, meaning);
        dictionaryDAO.addWord(newWord);  // Gọi phương thức addWord từ DAO
        loadTableData();  // Tải lại dữ liệu bảng sau khi thêm
    }//GEN-LAST:event_ThemActionPerformed

    private void SuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuaActionPerformed
        int selectedRow = TuDien.getSelectedRow();
        if (selectedRow >= 0) {
            // Lấy thông tin từ bảng và cho phép sửa
            String word = TuDien.getValueAt(selectedRow, 0).toString();
            String pronunciation = TuDien.getValueAt(selectedRow, 1).toString();
            String wordType = TuDien.getValueAt(selectedRow, 2).toString();
            String meaning = TuDien.getValueAt(selectedRow, 3).toString();

            word = JOptionPane.showInputDialog("Chỉnh sửa từ:", word);
            pronunciation = JOptionPane.showInputDialog("Chỉnh sửa phát âm:", pronunciation);
            wordType = JOptionPane.showInputDialog("Chỉnh sửa loại từ:", wordType);
            meaning = JOptionPane.showInputDialog("Chỉnh sửa nghĩa:", meaning);

            Word updatedWord = new Word(word, pronunciation, wordType, meaning);
            dictionaryDAO.updateWord(updatedWord);  // Cập nhật từ trong cơ sở dữ liệu
            loadTableData();  // Tải lại dữ liệu bảng sau khi sửa
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một từ để sửa.");
        }
    }//GEN-LAST:event_SuaActionPerformed

    private void XoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XoaActionPerformed
        int selectedRow = TuDien.getSelectedRow();
        if (selectedRow >= 0) {
            String word = TuDien.getValueAt(selectedRow, 0).toString();
            dictionaryDAO.deleteWord(word);  // Gọi phương thức deleteWord từ DAO
            loadTableData();  // Tải lại dữ liệu bảng sau khi xóa
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một từ để xóa.");
        }
    }//GEN-LAST:event_XoaActionPerformed
    private void loadTableData() {
        List<Word> words = dictionaryDAO.getAllWords();  // Lấy tất cả từ từ cơ sở dữ liệu
        Object[][] data = new Object[words.size()][4];
        for (int i = 0; i < words.size(); i++) {
            Word word = words.get(i);
            data[i] = new Object[] { word.getWord(), word.getPronunciation(), word.getWordType(), word.getMeaning() };
        }
        TuDien.setModel(new javax.swing.table.DefaultTableModel(
            data,
            new String[] { "Từ", "Phát Âm", "Loại Từ", "Nghĩa" }
        ));
    }
    private void LuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LuuActionPerformed
//        dictionaryDAO.saveChanges();  // Lưu các thay đổi vào cơ sở dữ liệu
//        JOptionPane.showMessageDialog(this, "Lưu thành công!");

    }//GEN-LAST:event_LuuActionPerformed

    private void QuayLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuayLaiActionPerformed
        this.dispose();  // Đóng cửa sổ hiện tại
    }//GEN-LAST:event_QuayLaiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UITuDien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UITuDien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UITuDien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UITuDien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UITuDien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Luu;
    private javax.swing.JButton QuayLai;
    private javax.swing.JButton Sua;
    private javax.swing.JButton Them;
    private javax.swing.JTable TuDien;
    private javax.swing.JButton Xoa;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
